version: "3.2"
services:
  linux:
    build:
      context: ./linux
      dockerfile: Dockerfile
    container_name: my_linux
    tty: true  
    stdin_open: true
    volumes:
      - ./data:/data  
    networks:
      - my_network

  php:
    build: 
      context: './php/'
      args:
       PHP_VERSION: ${PHP_VERSION}
    networks:
      - backend
    volumes:
      - ${PROJECT_ROOT}/:/var/www/html/
    container_name: php

  nginx-proxy:
    image: nginx
    container_name: nginx-proxy-iwi
    volumes:
      - ./conf.d:/etc/nginx/conf.d
      - ./log:/var/log/nginx
      - ./html:/usr/share/nginx/html
      - ./letsencrypt:/etc/letsencrypt
    ports:
      - "8080:80"  # Map port 80 to 8080 on the host
      - "8443:443" # Map port 443 to 8443 on the host
    environment:
      TZ: Asia/Tokyo
    command: >
      /bin/sh -c "while :; do sleep 36h & wait $${!}; nginx -s reload; done & nginx -g 'daemon off;'"
    restart: always
    depends_on:
      - php

  certbot:
    image: certbot/certbot:latest
    container_name: certbot-iwi
    volumes:
      - ./html:/usr/share/nginx/html
      - ./letsencrypt:/etc/letsencrypt
      - ./log_letsencrypt:/var/log/letsencrypt
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 24h & wait $${!}; done;'"
    restart: always
  mysql:
    image: mysql:${MYSQL_VERSION:-latest}
    restart: always
    ports:
      - "3307:3306"
    volumes:
      - data:/var/lib/mysql
    networks:
      - backend
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${DB_NAME}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
    container_name: mysql_QrCode

  adminer:
    image: adminer
    ports:
      - "8081:8080"  # Access Adminer at http://localhost:8081
    networks:
      - backend

networks:
  my_network:
    driver: bridge
  frontend:
  backend:

volumes:
  data: